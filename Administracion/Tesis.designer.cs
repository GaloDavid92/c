#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Administracion
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Tesis")]
	public partial class TesisDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertMisionVision(MisionVision instance);
    partial void UpdateMisionVision(MisionVision instance);
    partial void DeleteMisionVision(MisionVision instance);
    #endregion
		
		public TesisDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TesisConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TesisDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TesisDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TesisDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TesisDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MisionVision> MisionVision
		{
			get
			{
				return this.GetTable<MisionVision>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MisionVision")]
	public partial class MisionVision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Mision;
		
		private string _Vision;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMisionChanging(string value);
    partial void OnMisionChanged();
    partial void OnVisionChanging(string value);
    partial void OnVisionChanged();
    #endregion
		
		public MisionVision()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mision", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Mision
		{
			get
			{
				return this._Mision;
			}
			set
			{
				if ((this._Mision != value))
				{
					this.OnMisionChanging(value);
					this.SendPropertyChanging();
					this._Mision = value;
					this.SendPropertyChanged("Mision");
					this.OnMisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vision", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Vision
		{
			get
			{
				return this._Vision;
			}
			set
			{
				if ((this._Vision != value))
				{
					this.OnVisionChanging(value);
					this.SendPropertyChanging();
					this._Vision = value;
					this.SendPropertyChanged("Vision");
					this.OnVisionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
